/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TaskLazyImport = createFileRoute('/task')()
const SettingsLazyImport = createFileRoute('/settings')()
const ScheduleLazyImport = createFileRoute('/schedule')()
const QuotaLazyImport = createFileRoute('/quota')()
const ModlogsLazyImport = createFileRoute('/mod_logs')()
const MiddleLazyImport = createFileRoute('/middle')()
const InvoicerLazyImport = createFileRoute('/invoicer')()
const InvoicePreviewLazyImport = createFileRoute('/invoicePreview')()
const InvoiceClientsLazyImport = createFileRoute('/invoiceClients')()
const FinancialDashboardLazyImport = createFileRoute('/financialDashboard')()
const EmployeeLazyImport = createFileRoute('/employee')()
const DetailsLazyImport = createFileRoute('/details')()
const DetailFoldersLazyImport = createFileRoute('/detailFolders')()
const ContractGeneratorLazyImport = createFileRoute('/contractGenerator')()
const ColdEmailLazyImport = createFileRoute('/coldEmail')()
const ChatLazyImport = createFileRoute('/chat')()
const BudgetaryLazyImport = createFileRoute('/budgetary')()
const BroadcastLazyImport = createFileRoute('/broadcast')()
const BotLazyImport = createFileRoute('/bot')()
const BioLazyImport = createFileRoute('/bio')()
const IndexLazyImport = createFileRoute('/')()
const ClientIndexLazyImport = createFileRoute('/client/')()

// Create/Update Routes

const TaskLazyRoute = TaskLazyImport.update({
  id: '/task',
  path: '/task',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/task.lazy').then((d) => d.Route))

const SettingsLazyRoute = SettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const ScheduleLazyRoute = ScheduleLazyImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/schedule.lazy').then((d) => d.Route))

const QuotaLazyRoute = QuotaLazyImport.update({
  id: '/quota',
  path: '/quota',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/quota.lazy').then((d) => d.Route))

const ModlogsLazyRoute = ModlogsLazyImport.update({
  id: '/mod_logs',
  path: '/mod_logs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/mod_logs.lazy').then((d) => d.Route))

const MiddleLazyRoute = MiddleLazyImport.update({
  id: '/middle',
  path: '/middle',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/middle.lazy').then((d) => d.Route))

const InvoicerLazyRoute = InvoicerLazyImport.update({
  id: '/invoicer',
  path: '/invoicer',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/invoicer.lazy').then((d) => d.Route))

const InvoicePreviewLazyRoute = InvoicePreviewLazyImport.update({
  id: '/invoicePreview',
  path: '/invoicePreview',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/invoicePreview.lazy').then((d) => d.Route),
)

const InvoiceClientsLazyRoute = InvoiceClientsLazyImport.update({
  id: '/invoiceClients',
  path: '/invoiceClients',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/invoiceClients.lazy').then((d) => d.Route),
)

const FinancialDashboardLazyRoute = FinancialDashboardLazyImport.update({
  id: '/financialDashboard',
  path: '/financialDashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/financialDashboard.lazy').then((d) => d.Route),
)

const EmployeeLazyRoute = EmployeeLazyImport.update({
  id: '/employee',
  path: '/employee',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/employee.lazy').then((d) => d.Route))

const DetailsLazyRoute = DetailsLazyImport.update({
  id: '/details',
  path: '/details',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/details.lazy').then((d) => d.Route))

const DetailFoldersLazyRoute = DetailFoldersLazyImport.update({
  id: '/detailFolders',
  path: '/detailFolders',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/detailFolders.lazy').then((d) => d.Route))

const ContractGeneratorLazyRoute = ContractGeneratorLazyImport.update({
  id: '/contractGenerator',
  path: '/contractGenerator',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/contractGenerator.lazy').then((d) => d.Route),
)

const ColdEmailLazyRoute = ColdEmailLazyImport.update({
  id: '/coldEmail',
  path: '/coldEmail',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/coldEmail.lazy').then((d) => d.Route))

const ChatLazyRoute = ChatLazyImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/chat.lazy').then((d) => d.Route))

const BudgetaryLazyRoute = BudgetaryLazyImport.update({
  id: '/budgetary',
  path: '/budgetary',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/budgetary.lazy').then((d) => d.Route))

const BroadcastLazyRoute = BroadcastLazyImport.update({
  id: '/broadcast',
  path: '/broadcast',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/broadcast.lazy').then((d) => d.Route))

const BotLazyRoute = BotLazyImport.update({
  id: '/bot',
  path: '/bot',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bot.lazy').then((d) => d.Route))

const BioLazyRoute = BioLazyImport.update({
  id: '/bio',
  path: '/bio',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bio.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ClientIndexLazyRoute = ClientIndexLazyImport.update({
  id: '/client/',
  path: '/client/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/client/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/bio': {
      id: '/bio'
      path: '/bio'
      fullPath: '/bio'
      preLoaderRoute: typeof BioLazyImport
      parentRoute: typeof rootRoute
    }
    '/bot': {
      id: '/bot'
      path: '/bot'
      fullPath: '/bot'
      preLoaderRoute: typeof BotLazyImport
      parentRoute: typeof rootRoute
    }
    '/broadcast': {
      id: '/broadcast'
      path: '/broadcast'
      fullPath: '/broadcast'
      preLoaderRoute: typeof BroadcastLazyImport
      parentRoute: typeof rootRoute
    }
    '/budgetary': {
      id: '/budgetary'
      path: '/budgetary'
      fullPath: '/budgetary'
      preLoaderRoute: typeof BudgetaryLazyImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatLazyImport
      parentRoute: typeof rootRoute
    }
    '/coldEmail': {
      id: '/coldEmail'
      path: '/coldEmail'
      fullPath: '/coldEmail'
      preLoaderRoute: typeof ColdEmailLazyImport
      parentRoute: typeof rootRoute
    }
    '/contractGenerator': {
      id: '/contractGenerator'
      path: '/contractGenerator'
      fullPath: '/contractGenerator'
      preLoaderRoute: typeof ContractGeneratorLazyImport
      parentRoute: typeof rootRoute
    }
    '/detailFolders': {
      id: '/detailFolders'
      path: '/detailFolders'
      fullPath: '/detailFolders'
      preLoaderRoute: typeof DetailFoldersLazyImport
      parentRoute: typeof rootRoute
    }
    '/details': {
      id: '/details'
      path: '/details'
      fullPath: '/details'
      preLoaderRoute: typeof DetailsLazyImport
      parentRoute: typeof rootRoute
    }
    '/employee': {
      id: '/employee'
      path: '/employee'
      fullPath: '/employee'
      preLoaderRoute: typeof EmployeeLazyImport
      parentRoute: typeof rootRoute
    }
    '/financialDashboard': {
      id: '/financialDashboard'
      path: '/financialDashboard'
      fullPath: '/financialDashboard'
      preLoaderRoute: typeof FinancialDashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/invoiceClients': {
      id: '/invoiceClients'
      path: '/invoiceClients'
      fullPath: '/invoiceClients'
      preLoaderRoute: typeof InvoiceClientsLazyImport
      parentRoute: typeof rootRoute
    }
    '/invoicePreview': {
      id: '/invoicePreview'
      path: '/invoicePreview'
      fullPath: '/invoicePreview'
      preLoaderRoute: typeof InvoicePreviewLazyImport
      parentRoute: typeof rootRoute
    }
    '/invoicer': {
      id: '/invoicer'
      path: '/invoicer'
      fullPath: '/invoicer'
      preLoaderRoute: typeof InvoicerLazyImport
      parentRoute: typeof rootRoute
    }
    '/middle': {
      id: '/middle'
      path: '/middle'
      fullPath: '/middle'
      preLoaderRoute: typeof MiddleLazyImport
      parentRoute: typeof rootRoute
    }
    '/mod_logs': {
      id: '/mod_logs'
      path: '/mod_logs'
      fullPath: '/mod_logs'
      preLoaderRoute: typeof ModlogsLazyImport
      parentRoute: typeof rootRoute
    }
    '/quota': {
      id: '/quota'
      path: '/quota'
      fullPath: '/quota'
      preLoaderRoute: typeof QuotaLazyImport
      parentRoute: typeof rootRoute
    }
    '/schedule': {
      id: '/schedule'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof ScheduleLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/task': {
      id: '/task'
      path: '/task'
      fullPath: '/task'
      preLoaderRoute: typeof TaskLazyImport
      parentRoute: typeof rootRoute
    }
    '/client/': {
      id: '/client/'
      path: '/client'
      fullPath: '/client'
      preLoaderRoute: typeof ClientIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/bio': typeof BioLazyRoute
  '/bot': typeof BotLazyRoute
  '/broadcast': typeof BroadcastLazyRoute
  '/budgetary': typeof BudgetaryLazyRoute
  '/chat': typeof ChatLazyRoute
  '/coldEmail': typeof ColdEmailLazyRoute
  '/contractGenerator': typeof ContractGeneratorLazyRoute
  '/detailFolders': typeof DetailFoldersLazyRoute
  '/details': typeof DetailsLazyRoute
  '/employee': typeof EmployeeLazyRoute
  '/financialDashboard': typeof FinancialDashboardLazyRoute
  '/invoiceClients': typeof InvoiceClientsLazyRoute
  '/invoicePreview': typeof InvoicePreviewLazyRoute
  '/invoicer': typeof InvoicerLazyRoute
  '/middle': typeof MiddleLazyRoute
  '/mod_logs': typeof ModlogsLazyRoute
  '/quota': typeof QuotaLazyRoute
  '/schedule': typeof ScheduleLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/task': typeof TaskLazyRoute
  '/client': typeof ClientIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/bio': typeof BioLazyRoute
  '/bot': typeof BotLazyRoute
  '/broadcast': typeof BroadcastLazyRoute
  '/budgetary': typeof BudgetaryLazyRoute
  '/chat': typeof ChatLazyRoute
  '/coldEmail': typeof ColdEmailLazyRoute
  '/contractGenerator': typeof ContractGeneratorLazyRoute
  '/detailFolders': typeof DetailFoldersLazyRoute
  '/details': typeof DetailsLazyRoute
  '/employee': typeof EmployeeLazyRoute
  '/financialDashboard': typeof FinancialDashboardLazyRoute
  '/invoiceClients': typeof InvoiceClientsLazyRoute
  '/invoicePreview': typeof InvoicePreviewLazyRoute
  '/invoicer': typeof InvoicerLazyRoute
  '/middle': typeof MiddleLazyRoute
  '/mod_logs': typeof ModlogsLazyRoute
  '/quota': typeof QuotaLazyRoute
  '/schedule': typeof ScheduleLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/task': typeof TaskLazyRoute
  '/client': typeof ClientIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/bio': typeof BioLazyRoute
  '/bot': typeof BotLazyRoute
  '/broadcast': typeof BroadcastLazyRoute
  '/budgetary': typeof BudgetaryLazyRoute
  '/chat': typeof ChatLazyRoute
  '/coldEmail': typeof ColdEmailLazyRoute
  '/contractGenerator': typeof ContractGeneratorLazyRoute
  '/detailFolders': typeof DetailFoldersLazyRoute
  '/details': typeof DetailsLazyRoute
  '/employee': typeof EmployeeLazyRoute
  '/financialDashboard': typeof FinancialDashboardLazyRoute
  '/invoiceClients': typeof InvoiceClientsLazyRoute
  '/invoicePreview': typeof InvoicePreviewLazyRoute
  '/invoicer': typeof InvoicerLazyRoute
  '/middle': typeof MiddleLazyRoute
  '/mod_logs': typeof ModlogsLazyRoute
  '/quota': typeof QuotaLazyRoute
  '/schedule': typeof ScheduleLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/task': typeof TaskLazyRoute
  '/client/': typeof ClientIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bio'
    | '/bot'
    | '/broadcast'
    | '/budgetary'
    | '/chat'
    | '/coldEmail'
    | '/contractGenerator'
    | '/detailFolders'
    | '/details'
    | '/employee'
    | '/financialDashboard'
    | '/invoiceClients'
    | '/invoicePreview'
    | '/invoicer'
    | '/middle'
    | '/mod_logs'
    | '/quota'
    | '/schedule'
    | '/settings'
    | '/task'
    | '/client'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bio'
    | '/bot'
    | '/broadcast'
    | '/budgetary'
    | '/chat'
    | '/coldEmail'
    | '/contractGenerator'
    | '/detailFolders'
    | '/details'
    | '/employee'
    | '/financialDashboard'
    | '/invoiceClients'
    | '/invoicePreview'
    | '/invoicer'
    | '/middle'
    | '/mod_logs'
    | '/quota'
    | '/schedule'
    | '/settings'
    | '/task'
    | '/client'
  id:
    | '__root__'
    | '/'
    | '/bio'
    | '/bot'
    | '/broadcast'
    | '/budgetary'
    | '/chat'
    | '/coldEmail'
    | '/contractGenerator'
    | '/detailFolders'
    | '/details'
    | '/employee'
    | '/financialDashboard'
    | '/invoiceClients'
    | '/invoicePreview'
    | '/invoicer'
    | '/middle'
    | '/mod_logs'
    | '/quota'
    | '/schedule'
    | '/settings'
    | '/task'
    | '/client/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  BioLazyRoute: typeof BioLazyRoute
  BotLazyRoute: typeof BotLazyRoute
  BroadcastLazyRoute: typeof BroadcastLazyRoute
  BudgetaryLazyRoute: typeof BudgetaryLazyRoute
  ChatLazyRoute: typeof ChatLazyRoute
  ColdEmailLazyRoute: typeof ColdEmailLazyRoute
  ContractGeneratorLazyRoute: typeof ContractGeneratorLazyRoute
  DetailFoldersLazyRoute: typeof DetailFoldersLazyRoute
  DetailsLazyRoute: typeof DetailsLazyRoute
  EmployeeLazyRoute: typeof EmployeeLazyRoute
  FinancialDashboardLazyRoute: typeof FinancialDashboardLazyRoute
  InvoiceClientsLazyRoute: typeof InvoiceClientsLazyRoute
  InvoicePreviewLazyRoute: typeof InvoicePreviewLazyRoute
  InvoicerLazyRoute: typeof InvoicerLazyRoute
  MiddleLazyRoute: typeof MiddleLazyRoute
  ModlogsLazyRoute: typeof ModlogsLazyRoute
  QuotaLazyRoute: typeof QuotaLazyRoute
  ScheduleLazyRoute: typeof ScheduleLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  TaskLazyRoute: typeof TaskLazyRoute
  ClientIndexLazyRoute: typeof ClientIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  BioLazyRoute: BioLazyRoute,
  BotLazyRoute: BotLazyRoute,
  BroadcastLazyRoute: BroadcastLazyRoute,
  BudgetaryLazyRoute: BudgetaryLazyRoute,
  ChatLazyRoute: ChatLazyRoute,
  ColdEmailLazyRoute: ColdEmailLazyRoute,
  ContractGeneratorLazyRoute: ContractGeneratorLazyRoute,
  DetailFoldersLazyRoute: DetailFoldersLazyRoute,
  DetailsLazyRoute: DetailsLazyRoute,
  EmployeeLazyRoute: EmployeeLazyRoute,
  FinancialDashboardLazyRoute: FinancialDashboardLazyRoute,
  InvoiceClientsLazyRoute: InvoiceClientsLazyRoute,
  InvoicePreviewLazyRoute: InvoicePreviewLazyRoute,
  InvoicerLazyRoute: InvoicerLazyRoute,
  MiddleLazyRoute: MiddleLazyRoute,
  ModlogsLazyRoute: ModlogsLazyRoute,
  QuotaLazyRoute: QuotaLazyRoute,
  ScheduleLazyRoute: ScheduleLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  TaskLazyRoute: TaskLazyRoute,
  ClientIndexLazyRoute: ClientIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bio",
        "/bot",
        "/broadcast",
        "/budgetary",
        "/chat",
        "/coldEmail",
        "/contractGenerator",
        "/detailFolders",
        "/details",
        "/employee",
        "/financialDashboard",
        "/invoiceClients",
        "/invoicePreview",
        "/invoicer",
        "/middle",
        "/mod_logs",
        "/quota",
        "/schedule",
        "/settings",
        "/task",
        "/client/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/bio": {
      "filePath": "bio.lazy.tsx"
    },
    "/bot": {
      "filePath": "bot.lazy.tsx"
    },
    "/broadcast": {
      "filePath": "broadcast.lazy.tsx"
    },
    "/budgetary": {
      "filePath": "budgetary.lazy.tsx"
    },
    "/chat": {
      "filePath": "chat.lazy.tsx"
    },
    "/coldEmail": {
      "filePath": "coldEmail.lazy.tsx"
    },
    "/contractGenerator": {
      "filePath": "contractGenerator.lazy.tsx"
    },
    "/detailFolders": {
      "filePath": "detailFolders.lazy.tsx"
    },
    "/details": {
      "filePath": "details.lazy.tsx"
    },
    "/employee": {
      "filePath": "employee.lazy.tsx"
    },
    "/financialDashboard": {
      "filePath": "financialDashboard.lazy.tsx"
    },
    "/invoiceClients": {
      "filePath": "invoiceClients.lazy.tsx"
    },
    "/invoicePreview": {
      "filePath": "invoicePreview.lazy.tsx"
    },
    "/invoicer": {
      "filePath": "invoicer.lazy.tsx"
    },
    "/middle": {
      "filePath": "middle.lazy.tsx"
    },
    "/mod_logs": {
      "filePath": "mod_logs.lazy.tsx"
    },
    "/quota": {
      "filePath": "quota.lazy.tsx"
    },
    "/schedule": {
      "filePath": "schedule.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    },
    "/task": {
      "filePath": "task.lazy.tsx"
    },
    "/client/": {
      "filePath": "client/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
